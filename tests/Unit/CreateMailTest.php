<?php

namespace Tests\Unit;

use App\Models\Mail;
use App\Services\MailService;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class CreateMailTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    /**
     * @var MailService
     */
    private $mailService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->mailService = app(MailService::class);
    }

    public function test_mail_is_marked_as_posted_when_first_created()
    {
        $this->mailService->create($this->validParams());

        $this->assertTrue(Mail::query()->with('status')->first()->status->posted());
    }


    /**
     * new Mail happy path
     *
     * @param array $data
     * @return array
     */
    private function validParams($data = [])
    {
        return array_merge([
            'sender' => 'sender@mailersend.com',
            'recipient' => 'recipient@mailersend.com',
            'subject' => 'New Email',
            'text_content' => 'My new content',
            'html_content' => "<h1>My html content</h1><p>This is my paragraph</p>"
        ], $data);
    }
}
