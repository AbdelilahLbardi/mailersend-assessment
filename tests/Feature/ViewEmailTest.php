<?php

namespace Tests\Feature;

use App\Contracts\AttachmentService;
use App\Models\Mail;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class ViewEmailTest extends TestCase
{
    use RefreshDatabase;

    /** @var AttachmentService */
    private $attachmentService;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->attachmentService = app(AttachmentService::class);
    }


    public function test_i_can_see_email()
    {
        $mail = Mail::factory()->create([
            'sender' => 'sender@mail.com',
            'recipient' => 'recipient@mail.com',
            'subject' => 'Subject A'
        ]);

        Storage::fake();

        $attachments = [
            'report.pdf' => UploadedFile::fake()->create('report.pdf'),
            'landing-page.html' => UploadedFile::fake()->create('landing-page.html'),
            'banner.png' => UploadedFile::fake()->create('banner.png'),
        ];

        $this->attachmentService->upload($mail->id, $attachments);

        $response = $this->getJson(route('mails.show', $mail->id))->json('data');

        $this->assertEquals('sender@mail.com', $response['sender']);
        $this->assertEquals('recipient@mail.com', $response['recipient']);
        $this->assertEquals('Subject A', $response['subject']);
    }
}
